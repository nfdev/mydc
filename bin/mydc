#!/bin/bash

set -e

# Usage
usage_exit() {
  echo "USAGE: $0 [-r] <container-name>"
  echo "  -r: Remove target container."
  echo "  -f: Remove without yes/no check."
  exit 1
}

declare MODE="" REMOVE="" FORCE=""
declare MYDC=`echo ~/.mydc` MYHOME="" MYSHARE="" MYTMPL="" DPATH=""

# Check Input
while getopts rfh OPT
do
  case $OPT in
      r)  REMOVE="true"
          ;;
      f)  FORCE="true"
          ;;
      h)  usage_exit
          ;;
  esac
done

# Inputs
shift $((OPTIND - 1))
CNAME=$1
if [ "${CNAME}" = "" ]; then
  usage_exit
fi

# Check Environment
if [ ! -d "${MYDC}" ]; then
  echo "${MYDC} does not exists. Exit."
  exit 1
fi


# Main
MYHOME=${MYDC}/home/${CNAME}
MYSHARE=${MYDC}/share
MYTMPL=${MYDC}/template
DPATH=`which docker`

CID=`docker ps -a -q -f "name=^${CNAME}$" -f "ancestor=mydc"`
if [ "${REMOVE}" == "true" ]; then
  MODE="remove"
elif [ "${CID}" = "" ]; then
  MODE="create"
else
  MODE="run"
fi

if [ "${MODE}" = "remove" ]; then
  if [ "${CID}" != "" ]; then
    if [ "${FORCE}" != "true" ]; then
      read -p "Do you really delete ${CNAME}? (y/N): " yn
    else
      yn=y
    fi

    case "$yn" in
      [yY]* )
        docker rm "$CID"
        rm -rf ${MYHOME}
        echo "${CNAME} deleted."
        ;;
      * )
        echo "Stop Remove"
        ;;
    esac
  else
    echo "${CNAME} does not exits."
  fi
elif [ "${MODE}" = "create" ]; then
  cp -r "${MYTMPL}" "${MYHOME}"
  docker run -it -h "${CNAME}" \
    -v "${MYHOME}":/home/hogemin \
    -v "${MYSHARE}":/share \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v ${DPATH}:/usr/bin/docker \
    --name "${CNAME}" mydc:latest
else
  docker start -i "${CID}"
fi

exit 0
