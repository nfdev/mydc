#!/bin/bash

set -e

# Usage
usage_exit() {
  echo "USAGE: $0"
  exit 1
}

declare FORCE=""
declare CDIR="" MYDC=`echo ~/.mydc` MYDF="" MYHOMEROOT="" CID="" MYHOME="" MYSHARE="" DPATH="" UBUNTU_BEFORE="" UBUNTU_AFTER=""

# Check Input
while getopts fh OPT
do
  case $OPT in
    f)  FORCE="true"
      ;;
    h)  usage_exit
      ;;
  esac
done

# Check Environment
if [ ! -d "${MYDC}" ]; then
  echo "${MYDC} does not exists. Exit."
  exit 1
fi

# Check Running container
if [ `docker ps --filter status=running | wc -l` -gt 1 ]; then
  echo "Some containers are runnning. Please stop all."
  exit 1
fi


# Update base container

if [ "${FORCE}" == "true" ]; then
  docker pull ubuntu
else
  UBUNTU_BEFORE=`docker inspect ubuntu:latest -f "{{.RepoDigests}}"`
  docker pull ubuntu
  UBUNTU_AFTER=`docker inspect ubuntu:latest -f "{{.RepoDigests}}"`

  if [ "${UBUNTU_BEFORE}" == "${UBUNTU_AFTER}" ]; then
    echo "Don't need to update. Exit."
    exit 1
  fi
fi

# Update each containers
MYHOMEROOT="${MYDC}/home"
MYDF="${MYDC}/dc"
CDIR=`pwd`
DPATH=`which docker`

cd "${MYDF}"
docker build --no-cache -t mydc:latest .
ls ${MYHOMEROOT} | while read CNAME; do
  echo "Create ${CNAME}"
 
  CID=`docker ps -a -q -f "name=^${CNAME}$"`
  MYHOME="${MYHOMEROOT}/${CNAME}"
  MYSHARE="${MYDC}/share"

  if [ "${CID}" != "" ]; then
    docker rm "${CID}"
  fi

  docker create -it -h "${CNAME}" \
    -v "${MYHOME}":/home/hogemin \
    -v "${MYSHARE}":/vol \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v ${DPATH}:/usr/bin/docker \
    --name "${CNAME}" mydc:latest
  docker start -i "${CNAME}" < <(echo "sudo /usr/local/bin/dcupdate; exit")
done

cd "${CDIR}"

exit 0
